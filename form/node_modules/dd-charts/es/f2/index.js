import F2 from '@antv/my-f2';

Component({
    mixins: [{}],
    data: {
        width: 0,
        height: 0
    },
    props: {
        canvasId: 'f2-canvas',
        onDraw: function onDraw() {}
    },
    didUpdate: function didUpdate(prevProps, prevData) {
        // console.log(prevProps, this.props, prevData, this.data);
    },
    didMount: function didMount() {
        this.init();
    },
    didUnmount: function didUnmount() {},

    methods: {
        init: function init(cb) {
            var me = this;
            var canvasId = me.props.canvasId;
            dd.createSelectorQuery().select('#' + canvasId).boundingClientRect().exec(function (res) {
                // 获取分辨率
                var pixelRatio = dd.getSystemInfoSync().pixelRatio;
                // 获取画布实际宽高
                var canvasWidth = res[0].width;
                var canvasHeight = res[0].height;
                me.setData({
                    width: canvasWidth * pixelRatio,
                    height: canvasHeight * pixelRatio
                });
                var myCtx = dd.createCanvasContext(canvasId);
                myCtx.scale(pixelRatio, pixelRatio);
                var canvas = new F2.Renderer(myCtx);
                me.canvas = canvas;
                me.chart = new F2.Chart({
                    el: canvas,
                    width: canvasWidth,
                    height: canvasHeight
                });
                if (typeof cb === 'function') {
                    me.props.onDraw(me.chart, F2);
                } else if (me.props && me.props.onDraw) {
                    me.props.onDraw(me.chart, F2);
                    console.log(me.chart);
                }
            });
        },
        touchStart: function touchStart(e) {
            if (this.canvas) {
                this.canvas.emitEvent('touchstart', [e]);
            }
        },
        touchMove: function touchMove(e) {
            if (this.canvas) {
                this.canvas.emitEvent('touchmove', [e]);
            }
        },
        touchEnd: function touchEnd(e) {
            if (this.canvas) {
                this.canvas.emitEvent('touchend', [e]);
            }
        }
    }
});